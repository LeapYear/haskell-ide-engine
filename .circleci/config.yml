defaults: &defaults
  working_directory: ~/build
  docker:
    - image: centos:7
  steps:
    - checkout
    - run: yum update -y && yum install -y git
    - run:
        command: git submodule sync --recursive
    - run:
        command: git submodule update --recursive --init
    - run:
        name: Install stack
        command: curl -sSL https://get.haskellstack.org/ | sh
    - run:
        name: Install system dependencies
        command: yum install -y zlib-devel ncurses-devel
    - run:
        name: Write provided stack.yaml with predictable name
        command: cp ${STACK_FILE} stack-build.txt

    - run:
        name: Figure out resolver for better caching
        command: grep '^resolver:' stack-build.txt > resolver.txt

    - run:
        name: Create a composite cabal file for changes detection
        command: find . -name "*.cabal" | grep -v -e "stack-work" -e "dist-newstyle" -e "submodules" -e "testdata" | sort | xargs cat > all-cabal.txt

    - restore_cache:
        keys:
          - stack-cache-{{ .Environment.HIE_CACHE }}-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "stack-build.txt" }}-{{ checksum "all-cabal.txt" }}
          - stack-cache-{{ .Environment.HIE_CACHE }}-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "stack-build.txt" }}
          - stack-cache-{{ .Environment.HIE_CACHE }}-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "resolver.txt" }}

    - run:
        name: Stack upgrade
        command: stack upgrade

    - run:
        name: Stack setup
        command: stack -j 2 --stack-yaml=${STACK_FILE} setup

    - run:
        name: Install other tools
        command: stack --stack-yaml=${STACK_FILE} install happy brittany alex

    - run:
        name: Install Hoogle
        command: stack -j 1 --stack-yaml=${STACK_FILE} install hoogle

    - run:
        name: Build (we need the exe for tests)
        command: |
          stack --stack-yaml=${STACK_FILE} build ghc-lib-parser --only-dependencies
          stack -j 1 --stack-yaml=${STACK_FILE} build ghc-lib-parser
          stack --stack-yaml=${STACK_FILE} install
        no_output_timeout: 30m

    # - run:
    #     name: Build Testsuite without running it
    #     command: stack -j 2 --stack-yaml=${STACK_FILE}  build --test --no-run-tests
    #     no_output_timeout: 30m

    - store_artifacts:
        path: ~/.local/bin
        destination: bin

    - run:
        name: Generate Hoogle database
        command: if [ ! -d ~/.hoogle ]; then stack --stack-yaml=${STACK_FILE} exec hoogle generate; fi

    - store_artifacts:
        path: ~/.hoogle
        destination: hoogle

    - run:
        name: package up artifacts
        command: |
          mkdir /tmp/artifacts
          tar zcvf /tmp/artifacts/bin.tar.gz -C ~/.local/bin ./
          tar zcvf /tmp/artifacts/hoogle.tar.gz -C ~/.hoogle ./

    - store_artifacts:
        path: /tmp/artifacts
        destination: artifacts

    - run:
        name: Clear cabal-helper cache
        command: rm -fr ~/.cache/cabal-helper

    - save_cache:
        key: stack-cache-{{ .Environment.HIE_CACHE }}-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "resolver.txt" }}
        paths: &cache_paths
          - ~/.stack
          - ~/.cache
          - ~/.hoogle
          - ~/build/.stack-work
          - ~/build/hie-plugin-api/.stack-work
          - ~/build/submodules/HaRe/.stack-work
          - ~/build/submodules/brittany/.stack-work
          - ~/build/submodules/ghc-mod/core/.stack-work
          - ~/build/submodules/ghc-mod/.stack-work
          - ~/build/submodules/cabal-helper/.stack-work

    # - run:
    #     name: Test
    #     # Tests MUST run with -j1, since multiple ghc-mod sessions are not allowed
    #     command: stack -j 1 --stack-yaml=${STACK_FILE} test --dump-logs
    #     no_output_timeout: 120m

    # - store_test_results:
    #     path: test-results

    # - store_artifacts:
    #     path: test-logs

    - save_cache:
        key: stack-cache-{{ .Environment.HIE_CACHE }}-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "stack-build.txt" }}
        paths: *cache_paths

    - save_cache:
        key: stack-cache-{{ .Environment.HIE_CACHE }}-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "stack-build.txt" }}-{{ checksum "all-cabal.txt" }}
        paths: *cache_paths

version: 2
jobs:
  build:
    environment:
      - STACK_FILE: "stack-8.6.5.yaml"
    <<: *defaults
